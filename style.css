@import url('https://fonts.googleapis.com/css2?family=Crimson+Text:wght@600&display=swap');

:root {
	--color-bg: #030101;
	--color-base: #7F1F05;
	--color-focus: #FFE526;
	--color-shadow-small: #F35A0B;
	--blur: 0.35vmin;
	--blur-focus: 0.12vmin;
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-display: block;
}

/* disable scrollbar in chrome */
::-webkit-scrollbar {
	width: 0;
	background: transparent;
}

/* include html to fix mix-blend-mode in chrome */
html, body {
	background-color: var(--color-bg);
}

/* disable scrollbar in firefox */
.main {
	scrollbar-width: none;
	overflow-y: scroll;
	height: 100vh;
}

.text {
	display: table;
	position: relative;
	transform: translate(-50%, -50%);
	color: var(--color-base);

	font-family: "Crimson Text", serif;
	font-size: 9vmin;
	font-weight: bold;
	margin-bottom: -1min;
	text-transform: capitalize;
	user-select: none;

	animation: horizontal 1s, bottom-to-top 1s, focus 1s;
	animation-fill-mode: forwards;
	animation-timing-function: linear;
	animation-play-state: paused;
}

.heading {
	font-family: Helvetica, sans-serif;
	font-size: 4vmin;
	font-weight: normal;
	line-height: 220%;
	margin-top: 1vh;
}

.overlay {
	position: fixed;
	width: 100vw;
	height: 40vh;
	top: 50%;
	transform: translateY(-50%);
	pointer-events: none;
	background-image: linear-gradient(transparent, rgba(100%, 100%, 100%, 0.8), transparent);
	mix-blend-mode: overlay;
	z-index: 100;
}

.gap {
	height: 106vh;
}

@keyframes horizontal {
	from {
		left: 40%;
	}

	to {
		left: 60%;
	}
}

@keyframes focus {
	0% {
		filter: blur(var(--blur));
		text-shadow: var(--color-shadow-small) 0vmin 0.35vmin 0.7vmin/*, transparent 0vmin 0vmin 100vmin */;
	}

	20% {
		color: var(--color-base);
	}

	95%, 100% {
		color: var(--color-focus);
		filter: blur(var(--blur-focus));
		text-shadow: var(--color-shadow-small) 0vmin 0.35vmin 0.7vmin/*, var(--color-base) 0vmin 0vmin 100vmin */;
	}
}

@keyframes bottom-to-top {
	0% {
		transform: translate(-50%, -50%) rotateX(-5deg) rotateY(-60deg);
	}

	48%, 52% {
		transform: translate(-50%, -50%) rotateX(0) rotateY(0);
	}

	100% {
		transform: translate(-50%, -50%) rotateX(15deg) rotateY(60deg);
	}
}
